{"version":3,"sources":["components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","seperator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","direction","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.219ca4af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__13tKM\",\"card\":\"Cards_card__224Bt\",\"infected\":\"Cards_infected__2bwkw\",\"recovered\":\"Cards_recovered__3b4-P\",\"deaths\":\"Cards_deaths__30BuB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__28Px9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__-iva1\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate } }) =>{\r\n    console.log(lastUpdate);\r\n    if(!confirmed) {\r\n        return 'Loading...';\r\n    }\r\n    if(!recovered) {\r\n        return 'Loading...';\r\n    }\r\n    if(!deaths) {\r\n        return 'Loading...';\r\n    }\r\n    if(!lastUpdate) {\r\n        return 'Loading...';\r\n        \r\n    }\r\n     \r\n    \r\n    \r\n\r\n    return(\r\n        \r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} seperator=\",\" />\r\n                         </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                    \r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} seperator={\",\"}/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                    \r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} seperator={\",\"}/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths due to COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                    \r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n  let changeableUrl = url;\r\n\r\n  if(country){\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n    try{ \r\n        const { data: {confirmed, recovered,deaths,lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n        \r\n\r\n    }\r\n\r\n    catch (error) { \r\n      console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport  const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries }} = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n\r\n  }\r\n  catch (error){\r\n    console.log(error);\r\n\r\n  }\r\n}","import React, {useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl, Grid } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\n\r\nconst CountryPicker = ({ handleCountryChange }) =>{\r\n  const [ fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\nuseEffect(() =>{\r\n  const fetchAPI = async ()=> {\r\n    setFetchedCountries(await fetchCountries());\r\n  }\r\n\r\n  fetchAPI();\r\n\r\n}, [setFetchedCountries]);\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e)=> handleCountryChange(e.target.value)}> \r\n        <option value=\"global\"> Global </option>\r\n        {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n    \r\n  )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Cards, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n    state= {  \r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState( { data: fetchedData } );\r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n        const fetchedData = await fetchData(country);\r\n\r\n       \r\n        \r\n        // set the state\r\n\r\n        this.setState( { data: fetchedData, country: country } );\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n               \r\n                \r\n            <Grid container direction=\"column\">\r\n            \r\n                <Grid item  >\r\n                        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    </Grid>\r\n                  \r\n                    <Grid item xs={12}>\r\n                        <Cards data={this.state.data} />\r\n                    </Grid>\r\n\r\n            </Grid>       \r\n\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n"],"sourceRoot":""}